#!/bin/bash
export DEBIAN_FRONTEND=noninteractive
if [[ -d "/opt/nvm" && -f "/usr/local/hestia/data/templates/web/nginx/NodeApp.stpl" ]]
then
    echo "NodeApp appears to already be installed"
    exit
fi

# ############################################ 
# # Install NVM, NodeJS, PM2, and grunt
# ############################################

# # Remove existing NodeJS installation
# apt remove --purge nodejs -y

# Get prerequisites, latest NVM version, and build tools if we need to compile from source
apt-get install -y curl build-essential gnupg2 rsync
LATEST_VERSION=$(curl -s https://api.github.com/repos/nvm-sh/nvm/releases/latest | grep '"tag_name":' | cut -d '"' -f 4)
curl -fsSL https://raw.githubusercontent.com/nvm-sh/nvm/${LATEST_VERSION}/install.sh | bash
source ~/.bashrc

# Install node version manager, globally
mv ~/.nvm /opt/nvm
chmod -R 755 /opt/nvm
export NVM_DIR="/opt/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
export PATH="/opt/nvm:$PATH"

# Initial install of NodeJS (version 20 is an LTS version)
nvm install v22
npm install -g npm@latest

# Install last three NodeJS LTS versions
nvm install v16
nvm install v18
nvm install v20
nvm alias default v22

# Install grunt, pm2 globally for all versions
nvm use v16
npm install -g grunt-cli
npm install -g pm2
nvm use v18
npm install -g grunt-cli
npm install -g pm2
nvm use v20
npm install -g grunt-cli
npm install -g pm2
nvm use v22
npm install -g grunt-cli
npm install -g pm2


############################################
# Install templates
############################################

rsync -r ./nginx/ /usr/local/hestia/data/templates/web/nginx/

############################################
# Update global bash.bashrc
############################################

if ! grep -Fxq "# begin hcpp-nodeapp" "/etc/bash.bashrc";then

cat <<EOT >> /etc/bash.bashrc
# begin hcpp-nodeapp
export NVM_DIR="/opt/nvm"
[ -s "\$NVM_DIR/nvm.sh" ] && \. "\$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "\$NVM_DIR/bash_completion" ] && \. "\$NVM_DIR/bash_completion"  # This loads nvm bash_completion
export PATH="/opt/nvm:\$PATH"
# end hcpp-nodeapp
EOT

fi

# Comment out /root/.bashrc
BASHRC_FILE="/root/.bashrc"

# Lines to search for
NVM_LINES=(
    'export NVM_DIR="$HOME/.nvm"'
    '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'
    '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"'
)

# Iterate over each line and comment it out if not already commented
for line in "${NVM_LINES[@]}"; do
    # Escape special characters in the line for use in grep and sed
    escaped_line=$(printf '%s\n' "$line" | sed 's/[.[\*^$(){}?+|]/\\&/g')

    # Check if the line exists and is not already commented
    if grep -q "$escaped_line" "$BASHRC_FILE" && ! grep -q "# $escaped_line" "$BASHRC_FILE"; then
        sed -i "s|$escaped_line|# $line|" "$BASHRC_FILE"
        echo "Commented out: $line"
    else
        echo "Line not found or already commented: $line"
    fi
done

# Notify installation has finished
/usr/local/hestia/bin/v-add-user-notification admin NodeApp "<span style=\"font-size:large;color:green;\">&#11042;</span> NodeApp plugin has finished installing."
